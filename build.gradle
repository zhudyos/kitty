buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.50"
        classpath "gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.15.0"
    }
}

allprojects {

    group "io.zhudy.kitty"

    apply plugin: "kotlin"
    apply plugin: "jacoco"
    apply plugin: "maven"
    apply plugin: "signing"
    apply plugin: "com.github.hierynomus.license"

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    test {
        useJUnitPlatform()
        testLogging {
            showStandardStreams = true
            exceptionFormat = "FULL"
        }
        failFast = true
    }

    jacoco {
        toolVersion = "0.8.4"
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = "sources"
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    tasks.withType(com.hierynomus.gradle.license.tasks.LicenseCheck) {
        it.enabled = false
    }

    license {
        header = rootProject.file("LICENSE")
        headerURI = com.hierynomus.gradle.license.LicenseBasePlugin.class.getClassLoader().getResource("headers/Apache-2.0").toURI()
        skipExistingHeaders = true
        ext {
            year = "2019-${Calendar.getInstance().get(Calendar.YEAR)}"
            author = "the original author or authors"
        }
    }

    dependencies {
        implementation(platform("org.springframework.boot:spring-boot-dependencies:2.2.0.RELEASE"))
        implementation("org.jetbrains.kotlin:kotlin-stdlib")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

        testImplementation("io.mockk:mockk:1.9.3")
        testImplementation("org.assertj:assertj-core")
        testImplementation("org.junit.jupiter:junit-jupiter")
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    jar {
        baseName "${rootProject.name}-${project.name}"
    }
}

// disabled tasks
jar.enabled = false
install.enabled = false
